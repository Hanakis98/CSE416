{"version":3,"sources":["components/Nav2.jsx","components/Footer.jsx","components/Home.jsx","components/StudentHome.jsx","components/Students.jsx","components/Degrees.jsx","components/Courses.jsx","components/Trends.jsx","components/EditStudent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Nav2","props","toggle","bind","state","isOpen","this","setState","className","Navbar","color","light","expand","NavbarBrand","class","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","Component","withRouter","Footer","Home","login","json_data","username","password","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","data","console","log","catch","error","Container","style","display","alignItems","justifyContent","Form","FormGroup","Label","for","Input","type","name","id","placeholder","width","onChange","e","target","value","Button","StudentHome","Students","convertTextToCSV","text","csvData","split","forEach","res","push","verifyHeader","header","validHeader","index","replace","buildJSONfromRow","row","sbu_id","first_name","last_name","email","department","track","entry_semester","entry_year","requirement_version_semester","requirement_version_year","graduation_semester","graduation_year","onStudentFileChange","event","a","file","files","extension","pop","slice","map","x","addStudent","deleteStudent","studentID","students","deleteAllStudent","readAllStudent","newStudents","params","readOneStudent","updateStudent","searchStudent","currentStudents","filteredStudents","filter","student","Row","Col","xs","inline","NavLink","href","ref","uploadStudentData","click","Table","striped","Degrees","Courses","Trends","EditStudent","firstName","lastName","major","handleChange","handleSubmit","category","preventDefault","sm","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45caf9a3.chunk.js","sourcesContent":["import { React, Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem } from 'reactstrap';\n\nclass Nav2 extends Component{\n    constructor(props) {\n        super(props);\n        this.props = props;\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    render(){\n        return (\n        <div className=\"navigation\">\n            <Navbar color=\"inverse\" light expand=\"md\">\n                <NavbarBrand><Link class=\"nav-link\" to=\"/\">MAST</Link></NavbarBrand>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem>\n                            <Link class=\"nav-link\" to=\"/\">Home</Link>\n                        </NavItem>\n                        {/* <NavItem>\n                            <NavLink href=\"/\">Home (navlink)</NavLink>\n                        </NavItem> */}\n                        <NavItem>\n                            <Link class=\"nav-link\" to=\"/students\">Students</Link>\n                        </NavItem>\n                        <NavItem>\n                            <Link class=\"nav-link\" to=\"/degrees\">Degrees</Link>\n                        </NavItem>\n                        <NavItem>\n                            <Link class=\"nav-link\" to=\"/courses\">Courses</Link>\n                        </NavItem>\n                        <NavItem>\n                            <Link class=\"nav-link\" to=\"/trends\">Trends</Link>\n                        </NavItem>\n                        <NavItem>\n                            <Link class=\"nav-link\" to=\"/studenthome\">Student Home</Link>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n        );\n    }\n}\n\nexport default withRouter(Nav2);","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <footer class=\"py-5 bg-dark fixed-bottom\">\n        <div class=\"container\">\n          <p class=\"m-0 text-center text-white\">\n            {/* Footer text */}\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;","import { React, Component, Select } from 'react';\nimport { Container, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from 'axios'\nexport default class  Home extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n\n      username: \"\",\n      password: \"\",\n\n  };\n  \n  }\n\n  login = ()=> {\n    let json_data = {\n        username: this.state.username,\n        password: this.state.password\n\n    }\n    fetch('http://entry_year1/advisors/login', {\n        method: 'POST', // or 'PUT'\n        headers: {\n            'Content-Type': 'application/json',\n        },    \n        credentials: 'same-origin',\n                body: JSON.stringify(json_data),\n\n    })\n        .then(response => response.json())\n        .then(data => {\n            console.log('Success:', data);\n        })\n        .catch((error) => {\n            console.error('Error:', error);\n        });\n\n}\n\n  render(){\n  return (\n    <Container style={{display: 'flex', alignItems: 'center', justifyContent: 'center',}}>\n      <Form>\n        <FormGroup>\n          <Label for=\"login_id\">ID</Label>\n          <Input type=\"text\" name=\"id\" id=\"login_id\" placeholder=\"110047354\" style={{width:200}}  onChange = {e=> this.setState( {username: e.target.value })} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"login_password\">Password</Label>\n          <Input type=\"password\" name=\"password\" id=\"login_password\" placeholder=\"\" style={{width:200}} onChange = {e=> this.setState( {password: e.target.value })} />\n      </FormGroup>\n        <Button onClick ={this.login}>Submit</Button>\n      </Form>\n    </Container>\n  );\n}\n}\n","import { React, Component } from 'react';\n//import { Button } from 'reactstrap';\n\nexport default class StudentHome extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n    }\n    render(){\n        return (\n            <p>Template page</p>\n        );\n    }\n}","import { React, Component } from 'react';\nimport { Table, Container, Form, FormGroup, Label, Input, Row, Col, Button, NavLink } from 'reactstrap';\nimport { Link, withRouter } from \"react-router-dom\";\n\nexport default class Students extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            students: []\n        };\n    }\n\n    componentDidMount() {\n        this.readAllStudent().then(newStudents => this.setState({students: newStudents}))\n    }\n\n    convertTextToCSV = (text) => {\n        let csvData = [];\n        let lbreak = text.split(\"\\n\");\n        lbreak.forEach(res => {\n            csvData.push(res.split(\",\"));\n        });\n        return csvData\n    }\n\n    verifyHeader = (header) => {\n        let validHeader = true\n        header.forEach(function (data, index) {\n            if (index === 0 && data !== 'sbu_id') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 1 && data !== 'first_name') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 2 && data !== 'last_name') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 3 && data !== 'email') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 4 && data !== 'department') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 5 && data !== 'track') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 6 && data !== 'entry_semester') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 7 && data !== 'entry_year') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 8 && data !== 'requirement_version_semester') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 9 && data !== 'requirement_version_year') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 10 && data !== 'graduation_semester') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 11 && data !== 'graduation_year') {\n                validHeader = false\n                console.log(index)\n            } else if (index === 12 && data.replace(/\\W/g, '') !== 'passwords'){\n                validHeader = false\n                console.log(data)\n            }\n        })\n        return validHeader\n    }\n\n    buildJSONfromRow = (row) => {\n        let json = { sbu_id: row[0], first_name: row[1], last_name: row[2], email: row[3], department: row[4], track: row[5], entry_semester: row[5], entry_year: row[6], requirement_version_semester: row[7], requirement_version_year: row[8], graduation_semester: row[9], graduation_year: row[10], password:row[11] }\n        return json\n    }\n\n    onStudentFileChange = async event => {\n        var file = event.target.files[0]\n        console.log(file)\n        var extension = file.name.split('.').pop()\n        if (extension === 'csv') {\n            console.log(extension)\n            let text = await file.text();\n            let csvData = this.convertTextToCSV(text)\n\n            // Verfiy header of csv file\n            console.log(csvData)\n            let header = csvData[0]\n            let data = csvData.slice(1)\n            console.log(header)\n            if (this.verifyHeader(header)) {\n                let json_data = data.map(x => this.buildJSONfromRow(x))\n                console.log(json_data)\n                json_data.map(x => this.addStudent(x))\n            }\n        }\n    };\n\n    deleteStudent = (studentID) => {\n        console.log(studentID)\n        const data = { sbu_id: studentID }\n\n        \n        fetch('http://localhost:3001/students/deleteStudent', {\n            method: 'DELETE', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({students: data})\n                console.log('Success:', data);\n\n                \n            })\n            .catch((error) => {\n                console.error('Error:', error);\n        });\n\n    }\n\n    deleteAllStudent = (id) => {\n\n        let data = {sbu_id: id}\n\n        fetch('http://localhost:3001/students/deleteAllStudent', {\n            method: 'DELETE', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({students: data})\n                console.log('Success:', data);\n                \n            })\n            .catch((error) => {\n                console.error('Error:', error);\n        });\n    }\n\n\n    addStudent = (json_data) => {\n\n        fetch('http://localhost:3001/students/addStudent', {\n            method: 'POST', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(json_data),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n                this.readAllStudent().then(newStudents => this.setState({ students: newStudents }))\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    \n    }\n    \n    \n    \n    readAllStudent = (params) =>  {\n        var route = 'http://localhost:3001/students/allStudents/'\n    \n        return fetch(route, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }   \n            ,\n            credentials: 'include', \n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n                return data\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n                return []\n            });\n    }\n    \n    readOneStudent = (params) =>  {\n    \n        var route = 'http://localhost:3001/students/student/'\n        const data = { username: 'example', id: \"2\" };\n    \n        fetch(route, {\n            headers: {\n                'Content-Type': 'application/json',\n                'id': data.id\n            },\n    \n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    }\n    \n    updateStudent = (params) =>  {\n    \n        const data = { username: 'example', id: \"2\" };\n        var old_id = \"1\"\n    \n        fetch('http://localhost:3001/students/updateStudent', {\n            method: 'PUT', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n                'id': old_id\n            },\n            body: JSON.stringify(data),\n    \n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    }\n\n    searchStudent = (name) => {\n       if (name !== \"\"){\n            this.readAllStudent().then(currentStudents => {\n                var filteredStudents = currentStudents.filter(function(student){\n                    return student.first_name + \" \" + student.last_name === name \n                    || student.sbu_id === name\n                })  \n                this.setState({students: filteredStudents})\n       \n            })\n        }else{\n            this.readAllStudent().then(newStudents => this.setState({students: newStudents}))\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col xs=\"6\">\n                        <Form inline>\n                            <FormGroup>\n                                <Label>Search</Label>\n                                <Input type=\"text\" id=\"search\" onChange={e => this.searchStudent(e.target.value)}  />\n                            </FormGroup>\n                        </Form>\n                    </Col>\n                    <Col xs=\"2\">\n                        <Button>Filter</Button>\n                    </Col>\n                    <Col xs=\"1\">\n                        <Button>Import Grades</Button>\n                    </Col>\n                    <Col xs=\"1\">\n                        {/* <Link class=\"nav-link\" to=\"/students\"><Button>Add Student</Button></Link> */}\n                        <NavLink href=\"/edit\"><Button>Add Student</Button></NavLink>\n                    </Col>\n                    <Col xs=\"2\">\n                        <input id=\"myInput\" type=\"file\" ref={(ref) => this.uploadStudentData = ref} style={{ display: 'none' }} onChange={this.onStudentFileChange} />\n                        <Button onClick={(e) => this.uploadStudentData.click()}>Import Student Data</Button>\n                    </Col>\n                    <Col xs=\"2\">\n                        <Button onClick={this.deleteAllStudent}>Delete All Student</Button>\n                    </Col>\n                </Row>\n\n                <Table striped>\n                    <thead><tr>\n                        <th>Student</th>\n                        <th>ID</th>\n                        <th>GPA</th>\n                        <th>Degree</th>\n                        <th>Satisfied Reqs</th>\n                        <th>Pending Reqs</th>\n                        <th>Unsatisfied Reqs</th>\n                        <th>Graduation Semester</th>\n                        <th># Semesters Enrolled</th>\n                        <th>Course Plan Validity</th>\n                        <th>Course Plan Completeness</th>\n                    </tr></thead>\n                    \n                    <tbody>\n                        {this.state.students.map(x => (\n                            <tr>\n                                <td>{x.first_name + \" \" + x.last_name}</td>\n                                <td>{x.sbu_id}</td>\n                                <td>3.45</td>\n                                <td>{x.department}</td>\n                                <td>7</td>\n                                <td>5</td>\n                                <td>2</td>\n                                <td>Spring 2022</td>\n                                <td>6</td>\n                                <td>Valid</td>\n                                <td>Incomplete</td>\n                                <td> <button onClick={() => this.deleteStudent(x.sbu_id)}>Delete</button> </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </Container>\n        );\n    }\n}\n\n","import { React, Component } from 'react';\n//import { Button } from 'reactstrap';\n\nexport default class Degrees extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n    }\n    render(){\n        return (\n            <p>ok</p>\n        );\n    }\n}","import { React, Component } from 'react';\n//import { Button } from 'reactstrap';\n\nexport default class Courses extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n    }\n    render(){\n        return (\n            <p>Template page</p>\n        );\n    }\n}","import { React, Component } from 'react';\n//import { Button } from 'reactstrap';\n\nexport default class Trends extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n    }\n    render(){\n        return (\n            <p>Template page</p>\n        );\n    }\n}","import { React, Component, Select } from 'react';\nimport { Container, Row, Col, Form, Button, Label, Input, FormGroup } from 'reactstrap';\n\nexport default class EditStudent extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            username: \"\",\n            password: \"\",\n            department: \"AMS\",\n            track: \"\",\n            sbu_id: \"\",\n        };\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event){\n        this.setState({category: event.target.value});\n        console.log(event.target.value)\n    }\n    handleSubmit(event){\n        console.log(this.state);\n        event.preventDefault();\n    }\n    addStudent = ()=> {\n        let json_data = {\n            first_name: this.state.firstName,\n            last_name: this.state.lastName,\n            sbu_id: this.state.sbu_id,\n            email: this.state.email,\n            department:  this.state.major,\n            track: this.state.track,\n            username: this.state.username,\n            password: this.state.password\n\n        }\n        fetch('http://localhost:3001/students/addStudent', {\n            method: 'POST', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(json_data),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n    }\n    render(){\n        return (\n            <Container>\n                <Row>\n                    Add Student: Kevin McDonnell (or Add New Student)\n                </Row>\n                <Form>\n                    <FormGroup row>\n                        <Label for=\"name\" sm={1}>First Name</Label>\n                        <Col sm={4}><Input type=\"text\" id=\"name\" onChange = {e=> this.setState( {firstName: e.target.value })} /></Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"name\" sm={1}>Last Name</Label>\n                        <Col sm={4}><Input type=\"text\" id=\"name\" onChange = {e=> this.setState( {lastName: e.target.value })}/></Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"id\" sm={1}>ID</Label>\n                        <Col sm={4}><Input type=\"text\" id=\"id\" onChange = {e=> this.setState( {sbu_id: e.target.value })} /></Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"email\" sm={1}>Email</Label>\n                        <Col sm={4}><Input type=\"text\" id=\"email\" onChange = {e=> this.setState( {email: e.target.value })}/></Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"username\" sm={1}>username</Label>\n                        <Col sm={4}><Input type=\"text\" id=\"username\" onChange = {e=> this.setState( {username: e.target.value })}/></Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"password\" sm={1}>password</Label>\n                        <Col sm={4}><Input type=\"text\" id=\"password\" onChange = {e=> this.setState( {password: e.target.value })}/></Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"major\" sm={1}>Major</Label>\n                        <Col sm={4}>\n                        <Input type=\"select\" id=\"major\" onChange = {e=> this.setState( {major: e.target.value })} >\n                        <option value=\"None Selected\">None</option>\n\n                        <option value=\"AMS\">AMS</option>\n                        <option value=\"CSE\">CSE</option>\n                        <option value=\"ESE\">ESE</option>\n                        <option value=\"BMI\">BMI</option>\n                        </Input>\n                        \n                        </Col>\n                    </FormGroup>\n                    <FormGroup row>\n                        <Label for=\"track\" sm={1}>Track</Label>\n                        <Col sm={4}><Input type=\"select\" id=\"track\"  onChange = {e=> this.setState( {track: e.target.value })}>\n                        <option value=\"None Selected\">None</option>\n\n                            <option value=\"iit\">Imaging Informatics with thesis</option>\n                            <option value=\"iip\">Imaging Informatics with project</option>\n                            <option value=\"cit\">Clinical Informatics with thesis</option>\n                            <option value=\"cip\">Clinical Informatics with project</option>\n                            <option value=\"tbt\">Translational Bioinformatics with thesis</option>\n                            <option value=\"tbp\">Translational Bioinformatics with project</option>\n                            <option value=\"t\">Thesis</option>\n                            <option value=\"nt\">Non-Thesis</option>\n                            <option value=\"ap\">Advanced Project</option>\n                            <option value=\"sp\">Special Project</option>\n                            </Input>\n                            \n                        </Col>\n                    </FormGroup>\n                    <Button onClick = {this.addStudent} >Save</Button>\n                </Form>\n            </Container>\n        );\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Nav2, Footer, Home, StudentHome, Students, Degrees, Courses, Trends, EditStudent } from \"./components\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Nav2 />\n        <Switch>\n          <Route path=\"/\" exact component={() => <Home />} />\n          <Route path=\"/studenthome\" exact component={() => <StudentHome />} />\n          <Route path=\"/students\" exact component={() => <Students />} />\n          <Route path=\"/degrees\" exact component={() => <Degrees />} />\n          <Route path=\"/courses\" exact component={() => <Courses />} />\n          <Route path=\"/trends\" exact component={() => <Trends />} />\n          <Route path=\"/edit\" exact component={() => <EditStudent />} />\n        </Switch>\n        {/* <Footer /> */}\n      </Router>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}